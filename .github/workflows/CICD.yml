name: CICD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Build with Maven
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/live_server .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/live_server:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Docker Container
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.LIVE_SERVER_IP }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            set -e

            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/live_server:latest

            RUNNING=$(sudo docker ps --filter "name=blue" --format "{{.Names}}")
            if [ "$RUNNING" = "blue" ]; then
              CONTAINER_NAME="green"
              STOP_CONTAINER="blue"
              PORT="8081:8081"
              PROFILE="deploy"
            else
              CONTAINER_NAME="blue"
              STOP_CONTAINER="green"
              PORT="8080:8080"
              PROFILE="deploy"
            fi

            # Start new container
            sudo docker run -d \
              --name $CONTAINER_NAME \
              -p $PORT \
              -e PROFILES=$PROFILE \
              -e DB_URL=${{ secrets.DB_URL }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/live_server:latest

            # Stop and remove the old container
            sudo docker ps -a --filter "name=$STOP_CONTAINER" --format "{{.ID}}" | xargs -r sudo docker rm -f || true